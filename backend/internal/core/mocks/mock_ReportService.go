// Code generated by mockery v2.53.0. DO NOT EDIT.

package core

import (
	context "context"

	core "github.com/kotopesp/sos-kotopes/internal/core"
	mock "github.com/stretchr/testify/mock"
)

// MockReportService is an autogenerated mock type for the ReportService type
type MockReportService struct {
	mock.Mock
}

type MockReportService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReportService) EXPECT() *MockReportService_Expecter {
	return &MockReportService_Expecter{mock: &_m.Mock}
}

// CreateReport provides a mock function with given fields: ctx, report
func (_m *MockReportService) CreateReport(ctx context.Context, report core.Report) error {
	ret := _m.Called(ctx, report)

	if len(ret) == 0 {
		panic("no return value specified for CreateReport")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, core.Report) error); ok {
		r0 = rf(ctx, report)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockReportService_CreateReport_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateReport'
type MockReportService_CreateReport_Call struct {
	*mock.Call
}

// CreateReport is a helper method to define mock.On call
//   - ctx context.Context
//   - report core.Report
func (_e *MockReportService_Expecter) CreateReport(ctx interface{}, report interface{}) *MockReportService_CreateReport_Call {
	return &MockReportService_CreateReport_Call{Call: _e.mock.On("CreateReport", ctx, report)}
}

func (_c *MockReportService_CreateReport_Call) Run(run func(ctx context.Context, report core.Report)) *MockReportService_CreateReport_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(core.Report))
	})
	return _c
}

func (_c *MockReportService_CreateReport_Call) Return(err error) *MockReportService_CreateReport_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockReportService_CreateReport_Call) RunAndReturn(run func(context.Context, core.Report) error) *MockReportService_CreateReport_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockReportService creates a new instance of MockReportService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReportService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReportService {
	mock := &MockReportService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
